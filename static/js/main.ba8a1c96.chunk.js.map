{"version":3,"sources":["config/index.ts","actions/pokemonList.ts","actions/index.ts","components/PokemonID.tsx","components/PokemonTypes.tsx","components/PokemonCard/index.tsx","components/Spinner.tsx","components/PokemonList/index.tsx","hooks/useScrollEventListener.ts","containers/PokemonListContainer.tsx","pages/PokemonListPage.tsx","utils/isEmpty.ts","components/Card/style.ts","components/Card/index.tsx","components/PokemonInformations.tsx","components/Range.ts","components/PokemonStats.tsx","components/PokemonDescription.tsx","actions/evolutionChain.ts","containers/EvolutionChainContainer.tsx","components/PokemonDetails.tsx","actions/specie.ts","containers/PokemonDetailsContainer.tsx","actions/pokemonObject.ts","pages/PokemonPage.tsx","components/Navbar/index.tsx","App.tsx","serviceWorker.ts","reducers/pokemonObject.ts","reducers/pokemonList.ts","reducers/specieObject.ts","reducers/index.ts","store/index.ts","Theme.ts","index.tsx"],"names":["PokeAPI","require","Pokedex","protocol","hostName","versionPath","cache","timeout","pokemonListFailure","error","type","payload","ID","styled","p","Name","PokemonID","pokemon","style","overflow","id","className","name","TypesBlock","div","PokemonTypes","types","map","src","process","alt","key","PokemonImg","InformationsBlock","PokemonCardBlock","Link","PokemonCard","to","height","toFixed","weight","rotate360","keyframes","Spinner","PaddedCol","Col","PokemonList","pokemonList","pokemons","length","loading","center","xs","sm","md","lg","useScrollEventListener","callback","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","addEventListener","removeEventListener","connect","state","fetchPokemonList","limit","offset","dispatch","a","interval","getPokemonsList","results","getPokemonByName","then","response","catch","useState","setOffset","prevOffset","PokemonListPage","obj","Object","keys","constructor","CardContent","CardHeader","CardContainer","Card","title","children","containerClassName","AbilityText","PokemonInformations","abilities","ability","index","Range","progress","attrs","max","PokemonStats","stats","stat","toUpperCase","value","base_stat","SpaceBlocks","PokemonDescription","description","display","flexDirection","fetchEvolutionChain","console","log","getEvolutionChainById","evolutionChainUrl","split","Number","PokemonDetails","specie","flavor_text_entries","flavor_text","evolution_chain","url","pokemonSpeciesFailure","specieObject","pokemonObject","fetchPokemonObject","fetchPokemonSpecies","getPokemonSpeciesByName","useParams","isEmpty","PokemonPage","NavbarContainer","NavbarItem","Navbar","Container","App","basename","exact","path","Boolean","location","hostname","match","INITIAL_STATE","genera","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","preloadedState","createStore","applyMiddleware","thunk","createLogger","Theme","createGlobalStyle","store","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ba8a1c96.chunk.js","sourcesContent":["// @ts-ignore\r\nconst Pokedex = require(\"pokeapi-js-wrapper\");\r\n\r\nconst options = {\r\n  protocol: \"https\",\r\n  hostName: \"pokeapi.co\",\r\n  versionPath: \"/api/v2/\",\r\n  cache: true,\r\n  timeout: 60 * 1000, // 60s\r\n};\r\n\r\nexport const PokeAPI = new Pokedex.Pokedex(options);\r\n","import {\r\n  POKEMON_LIST_REQUEST,\r\n  POKEMON_LIST_SUCCESS,\r\n  POKEMON_LIST_FAILURE,\r\n} from \".\";\r\n\r\nimport { PokeAPI } from \"../config\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport function pokemonListRequest() {\r\n  return {\r\n    type: POKEMON_LIST_REQUEST,\r\n  };\r\n}\r\n\r\nexport function pokemonListSuccess(data: any) {\r\n  return {\r\n    type: POKEMON_LIST_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function pokemonListFailure(error: any) {\r\n  return {\r\n    type: POKEMON_LIST_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function fetchPokemonList(limit: number, offset: number) {\r\n  return async function (dispatch: Dispatch) {\r\n    dispatch(pokemonListRequest());\r\n    const interval = {\r\n      limit: limit,\r\n      offset: offset,\r\n    };\r\n\r\n    try {\r\n      const response = await PokeAPI.getPokemonsList(interval);\r\n      response.results.map(async (pokemon: any) => {\r\n        return await PokeAPI.getPokemonByName(pokemon.name)\r\n          .then((response: any) => {\r\n            dispatch(pokemonListSuccess(response));\r\n          })\r\n          .catch((error: any) => dispatch(pokemonListFailure(error)));\r\n      });\r\n    } catch (error) {\r\n      dispatch(pokemonListFailure(error));\r\n    }\r\n  };\r\n}\r\n","export const POKEMON_LIST_REQUEST = \"POKEMON_LIST_REQUEST\";\r\nexport const POKEMON_LIST_SUCCESS = \"POKEMON_LIST_SUCCESS\";\r\nexport const POKEMON_LIST_FAILURE = \"POKEMON_LIST_FAILURE\";\r\n\r\nexport const POKEMON_OBJECT_REQUEST = \"POKEMON_OBJECT_REQUEST\";\r\nexport const POKEMON_OBJECT_SUCCESS = \"POKEMON_OBJECT_SUCCESS\";\r\nexport const POKEMON_OBJECT_FAILURE = \"POKEMON_OBJECT_FAILURE\";\r\n\r\nexport const POKEMON_SPECIES_REQUEST = \"POKEMON_SPECIES_REQUEST\";\r\nexport const POKEMON_SPECIES_SUCCESS = \"POKEMON_SPECIES_SUCCESS\";\r\nexport const POKEMON_SPECIES_FAILURE = \"POKEMON_SPECIES_FAILURE\";\r\n\r\nexport const EVOLUTION_CHAIN_REQUEST = \"EVOLUTION_CHAIN_REQUEST\";\r\nexport const EVOLUTION_CHAIN_SUCCESS = \"EVOLUTION_CHAIN_SUCCESS\";\r\nexport const EVOLUTION_CHAIN_FAILURE = \"EVOLUTION_CHAIN_FAILURE\";\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst ID = styled.p`\r\n  float: left;\r\n`;\r\n\r\nconst Name = styled.p`\r\n  float: right;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst PokemonID: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <div style={{ overflow: \"auto\" }}>\r\n      <ID>#{pokemon.id}</ID>\r\n      <Name className=\"title\">{pokemon.name}</Name>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonID;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Pokemon } from \"../types\";\r\n\r\ninterface Props {\r\n  types: Pokemon[\"types\"];\r\n}\r\n\r\nconst TypesBlock = styled.div`\r\n  img {\r\n    max-height: 28px;\r\n    max-width: 64px;\r\n    margin: 0 0.25rem;\r\n  }\r\n`;\r\n\r\nconst PokemonTypes: React.FC<Props> = ({ types }) => {\r\n  return (\r\n    <TypesBlock>\r\n      {types.map((type) => (\r\n        <img\r\n          src={`${process.env.PUBLIC_URL}/images/types/${type.type.name}.svg`}\r\n          alt={type.type.name}\r\n          key={`key-${type.type.name}`}\r\n        />\r\n      ))}\r\n    </TypesBlock>\r\n  );\r\n};\r\n\r\nexport default PokemonTypes;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Pokemon } from \"../../types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PokemonID from \"../PokemonID\";\r\nimport PokemonTypes from \"../PokemonTypes\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nexport const PokemonImg = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 300px;\r\n  width: 100%;\r\n  align-self: center;\r\n  img {\r\n    transition: width 0.25s;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst InformationsBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst PokemonCardBlock = styled(Link)`\r\n  color: unset;\r\n  text-decoration: unset;\r\n  display: flex;\r\n  position: relative;\r\n  height: 500px;\r\n  padding: 1.25rem;\r\n  flex-direction: column;\r\n  transition: box-shadow 0.3s;\r\n  height: 100%;\r\n    box-sizing: border-box;\r\n\r\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\r\n  :hover {\r\n    box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\r\n    background: rgb(248, 248, 255, 0.5);\r\n    ${PokemonImg} img {\r\n      width: 175px;\r\n      overflow: visible;\r\n    }\r\n  }\r\n  text-align: center;\r\n  justify-content: space-between;\r\n  p {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n  }\r\n`;\r\n\r\nconst PokemonCard: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <PokemonCardBlock to={`/pokemon/${pokemon.name}`}>\r\n      <PokemonID pokemon={pokemon} />\r\n      \r\n      <PokemonImg>\r\n        <img src={`${process.env.PUBLIC_URL}/images/pokemons/${pokemon.id}.svg`} alt={pokemon.name} />\r\n      </PokemonImg>\r\n      \r\n      <InformationsBlock>\r\n        <p>Height: {(pokemon.height * 0.1).toFixed(1)} m</p>\r\n        <p>Weight: {(pokemon.weight * 0.1).toFixed(1)} kg</p>\r\n      </InformationsBlock>\r\n      \r\n      <PokemonTypes types={pokemon.types} />\r\n    </PokemonCardBlock>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid #5e7ef3;\r\n  border-right: 2px solid #5e7ef3;\r\n  border-bottom: 2px solid #5e7ef3;\r\n  border-left: 2px solid #082db3;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { PokemonListState } from \"../../types\";\r\nimport PokemonCard from \"../PokemonCard\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport styled from \"styled-components\";\r\nimport Spinner from \"../Spinner\";\r\n\r\ninterface Props {\r\n  pokemonList?: PokemonListState;\r\n}\r\n\r\nconst PaddedCol = styled(Col)`\r\n  padding: 0.75rem;\r\n`;\r\n\r\nconst PokemonList: React.FC<Props> = ({ pokemonList }) => {\r\n  if (!pokemonList) return null;\r\n  if (pokemonList.pokemons.length === 0 && pokemonList.loading)\r\n    return <Spinner />;\r\n  if (pokemonList.error) return null;\r\n\r\n  return (\r\n    <Row center=\"xs\">\r\n      {pokemonList.pokemons.map((pokemon) => (\r\n        <PaddedCol xs={12} sm={4} md={4} lg={4}>\r\n          <PokemonCard pokemon={pokemon} key={pokemon.id} />\r\n        </PaddedCol>\r\n      ))}\r\n      {<Spinner />}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction useScrollEventListener(callback: () => void) {\r\n  function handleScroll() {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    )\r\n      return;\r\n\r\n    callback();\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  return {};\r\n}\r\n\r\nexport default useScrollEventListener;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchPokemonList } from \"../actions/pokemonList\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../types\";\r\nimport PokemonList from \"../components/PokemonList\";\r\nimport useScrollEventListener from \"../hooks/useScrollEventListener\";\r\n\r\ninterface DispatchProps {\r\n  fetchPokemonList: (limit: number, offset: number) => void;\r\n}\r\n\r\ninterface StateProps {\r\n  pokemonList: RootState[\"pokemonList\"];\r\n}\r\n\r\ntype TotalProps = DispatchProps & StateProps;\r\n\r\nconst PokemonListContainer: React.FC<TotalProps> = ({\r\n  fetchPokemonList,\r\n  pokemonList,\r\n}) => {\r\n  const [offset, setOffset] = useState<number>(pokemonList ? pokemonList.pokemons.length : 0);\r\n  useScrollEventListener(useOffsetToNextPage);\r\n\r\n  function useOffsetToNextPage() {\r\n    setOffset((prevOffset) => prevOffset + 21);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPokemonList(21, offset > 649 ? 649 : offset);\r\n  }, [fetchPokemonList, offset]);\r\n\r\n  return <PokemonList pokemonList={pokemonList} />;\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({ pokemonList: state.pokemonList });\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, {\r\n  fetchPokemonList,\r\n})(PokemonListContainer);\r\n","import React from \"react\";\r\nimport PokemonListContainer from \"../containers/PokemonListContainer\";\r\n\r\ninterface Props {}\r\nconst PokemonListPage: React.FC<Props> = () => {\r\n  return <PokemonListContainer />;\r\n};\r\n\r\nexport default PokemonListPage;\r\n","export default (obj: any) => Object.keys(obj).length === 0 && obj.constructor === Object","import styled from \"styled-components\";\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 1.5rem;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  background-color: initial;\r\n  align-items: stretch;\r\n  box-shadow: 0 1px 2px rgba(10, 10, 10, 0.1);\r\n  display: flex;\r\n  padding: 0.75rem;\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  max-width: 100%;\r\n  position: relative;\r\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\r\n  @media screen and (max-width: 1088px) {\r\n    margin: 0.5rem 0;\r\n  }\r\n`;","import React from \"react\";\r\nimport { CardHeader, CardContent, CardContainer } from \"./style\";\r\n\r\ninterface Props {\r\n  title?: string;\r\n  containerClassName?: string; \r\n}\r\n\r\nconst Card: React.FC<Props> = ({ title, children, containerClassName }) => {\r\n  return (\r\n    <CardContainer className={containerClassName}>\r\n      {title && (\r\n        <CardHeader>\r\n          <p className=\"title\">{title}</p>\r\n        </CardHeader>\r\n      )}\r\n      <CardContent>{children}</CardContent>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport { Col, Row } from \"react-flexbox-grid\";\r\nimport Card from \"./Card\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst AbilityText = styled.p`\r\n  text-transform: capitalize;\r\n`\r\n\r\nconst PokemonInformations: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <Card title=\"Informations\">\r\n      <Row>\r\n        <Col xs>\r\n          <p className=\"gray\">Height</p>\r\n          <p>{(pokemon.height * 0.1).toFixed(1)} m</p>\r\n          <p className=\"gray\">Weight</p>\r\n          <p>{(pokemon.weight * 0.1).toFixed(1)} kg</p>\r\n        </Col>\r\n        <Col xs>\r\n          <p className=\"gray\">Abilities</p>\r\n          {pokemon.abilities.map((ability, index) => (\r\n            <AbilityText key={`ability-${index}`}>{ability.ability.name}</AbilityText>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonInformations;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Range = styled.progress.attrs({\r\n  max: 100,\r\n})<{ value: number }>`\r\n  -webkit-appearance: none;\r\n  -moz-apperance: none;\r\n  height: 1rem;\r\n  padding: 0;\r\n  border: solid 1px #66c7f4;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  background: #fff;\r\n  width: 100%;\r\n\r\n\r\n  &::-webkit-progress-bar {\r\n    background: #E8E8E8;\r\n  }\r\n  &::-webkit-progress-value {\r\n    background: #66c7f4;\r\n  }\r\n  &::-moz-progress-bar {\r\n    background: #66c7f4;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport Card from \"./Card\";\r\nimport { Range } from \"./Range\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst PokemonStats: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <Card containerClassName=\"card-margin-top\" title=\"Stats\">\r\n      {pokemon.stats.map((stat, index) => (\r\n        <div key={`stat-${index}`}>\r\n          <p className=\"gray\">{stat.stat.name.toUpperCase()}</p>\r\n          <Range value={stat.base_stat} />\r\n        </div>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonStats;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport { Pokemon } from \"../types\";\r\nimport PokemonID from \"./PokemonID\";\r\nimport styled from \"styled-components\";\r\nimport PokemonTypes from \"./PokemonTypes\";\r\nimport { PokemonImg } from \"./PokemonCard\";\r\n\r\ninterface Props {\r\n  description: string;\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst SpaceBlocks = styled.div`\r\n  div {\r\n    margin: 14px auto !important;\r\n  }\r\n`;\r\n\r\nconst PokemonDescription: React.FC<Props> = ({ description, pokemon }) => {\r\n  return (\r\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\r\n        <Card containerClassName=\"flex\">\r\n          <SpaceBlocks>\r\n            <PokemonID pokemon={pokemon} />\r\n            <PokemonImg>\r\n              <img src={`${process.env.PUBLIC_URL}/images/pokemons/${pokemon.id}.svg`} alt=\"test\" />\r\n            </PokemonImg>\r\n          </SpaceBlocks>\r\n\r\n          <p>{description}</p>\r\n        </Card>\r\n      <Card containerClassName=\"card-margin-top\">\r\n        <PokemonTypes types={pokemon.types} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonDescription;\r\n","import {\r\n  EVOLUTION_CHAIN_REQUEST,\r\n  EVOLUTION_CHAIN_SUCCESS,\r\n  EVOLUTION_CHAIN_FAILURE,\r\n} from \".\";\r\nimport { Dispatch } from \"redux\";\r\nimport { PokeAPI } from \"../config\";\r\n\r\nexport function evolutionChainRequest() {\r\n  return {\r\n    type: EVOLUTION_CHAIN_REQUEST,\r\n  };\r\n}\r\n\r\nexport function evolutionChainSuccess(data: any) {\r\n  return {\r\n    type: EVOLUTION_CHAIN_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function evolutionChainFailure(error: any) {\r\n  return {\r\n    type: EVOLUTION_CHAIN_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function fetchEvolutionChain(id: number) {\r\n  return async function (dispatch: Dispatch) {\r\n    dispatch(evolutionChainRequest());\r\n    console.log(id)\r\n    try {\r\n      const response = await PokeAPI.getEvolutionChainById(id);\r\n      console.log(response);\r\n    } catch (error) {\r\n      dispatch(evolutionChainFailure(error));\r\n    }\r\n  };\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { fetchEvolutionChain } from \"../actions/evolutionChain\";\r\nimport { connect } from \"react-redux\";\r\n\r\ninterface OwnProps {\r\n  evolutionChainUrl: string | null;\r\n}\r\n\r\ninterface DispatchProps {\r\n  fetchEvolutionChain: (id: number) => void;\r\n}\r\n\r\ninterface StateProps {}\r\n\r\ntype TotalProps = DispatchProps & StateProps & OwnProps;\r\n\r\nconst EvolutionChainContainer: React.FC<TotalProps> = ({\r\n  fetchEvolutionChain,\r\n  evolutionChainUrl,\r\n}) => {\r\n  useEffect(() => {\r\n    if (evolutionChainUrl) {\r\n      console.log(evolutionChainUrl.split(\"/\")[6]);\r\n      fetchEvolutionChain(Number(evolutionChainUrl.split(\"/\")[6]));\r\n    }\r\n  }, [fetchEvolutionChain, evolutionChainUrl]);\r\n\r\n  if (!evolutionChainUrl) return null;\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default connect(null, { fetchEvolutionChain })(EvolutionChainContainer);\r\n","import React from \"react\";\r\nimport { Pokemon, Specie } from \"../types\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport PokemonInformations from \"./PokemonInformations\";\r\nimport PokemonStats from \"./PokemonStats\";\r\nimport PokemonDescription from \"./PokemonDescription\";\r\nimport Card from \"./Card\";\r\nimport EvolutionChainContainer from \"../containers/EvolutionChainContainer\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n  specie: Specie;\r\n}\r\n\r\nconst PokemonDetails: React.FC<Props> = ({ pokemon, specie }) => {\r\n  return (\r\n    <>\r\n      <Row center=\"xs\">\r\n        <Col xs={12} sm={12} md={12} lg={4}>\r\n          <PokemonDescription\r\n            pokemon={pokemon}\r\n            description={specie.flavor_text_entries[0].flavor_text}\r\n          />\r\n        </Col>\r\n        <Col xs={12} sm={12} md={12} lg={8}>\r\n          <PokemonInformations pokemon={pokemon} />\r\n          <PokemonStats pokemon={pokemon} />\r\n        </Col>\r\n      </Row>\r\n      <Row center=\"xs\">\r\n        <Col xs={12}>\r\n          <Card containerClassName=\"card-margin-top\">\r\n            <EvolutionChainContainer evolutionChainUrl={specie.evolution_chain.url} />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonDetails;\r\n","import { POKEMON_SPECIES_REQUEST, POKEMON_SPECIES_SUCCESS, POKEMON_SPECIES_FAILURE } from \".\";\r\nimport { Dispatch } from \"redux\";\r\nimport { PokeAPI } from \"../config\";\r\n\r\nexport function pokemonSpeciesRequest() {\r\n    return {\r\n      type: POKEMON_SPECIES_REQUEST,\r\n    };\r\n  }\r\n  \r\n  export function pokemonSpeciesSuccess(data: any) {\r\n    return {\r\n      type: POKEMON_SPECIES_SUCCESS,\r\n      payload: data,\r\n    };\r\n  }\r\n  \r\n  export function pokemonSpeciesFailure(error: any) {\r\n    return {\r\n      type: POKEMON_SPECIES_FAILURE,\r\n      payload: error,\r\n    };\r\n  }\r\n\r\n  export function fetchPokemonSpecies(name: string) {\r\n    return async function (dispatch: Dispatch) {\r\n      dispatch(pokemonSpeciesRequest());\r\n      return await PokeAPI.getPokemonSpeciesByName(name)\r\n        .then((response: any) => dispatch(pokemonSpeciesSuccess(response)))\r\n        .catch((error: any) => dispatch(pokemonSpeciesFailure(error)));\r\n    };\r\n  }","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState, Pokemon, Specie } from \"../types\";\r\nimport { fetchPokemonObject } from \"../actions/pokemonObject\";\r\nimport isEmpty from \"../utils/isEmpty\";\r\nimport PokemonDetails from \"../components/PokemonDetails\";\r\nimport { fetchPokemonSpecies } from \"../actions/specie\";\r\nimport { fetchEvolutionChain } from \"../actions/evolutionChain\";\r\n\r\ninterface DispatchProps {\r\n  fetchPokemonObject: (name: string) => void;\r\n  fetchPokemonSpecies: (name: string) => void;\r\n  fetchEvolutionChain: (id: number) => void;\r\n}\r\n\r\ninterface StateProps {\r\n  pokemonObject: RootState[\"pokemonObject\"];\r\n  specieObject: RootState[\"specieObject\"];\r\n}\r\n\r\ntype TotalProps = DispatchProps & StateProps;\r\n\r\nconst PokemonDetailsContainer: React.FC<TotalProps> = ({\r\n  fetchPokemonObject,\r\n  fetchPokemonSpecies,\r\n  fetchEvolutionChain,\r\n  pokemonObject,\r\n  specieObject,\r\n}) => {\r\n  const { name } = useParams<{ name: string }>();\r\n\r\n  useEffect(() => {\r\n    fetchPokemonObject(name);\r\n    fetchPokemonSpecies(name);\r\n  }, [name, fetchPokemonObject, fetchPokemonSpecies]);\r\n\r\n  if (\r\n    !pokemonObject ||\r\n    !specieObject ||\r\n    isEmpty(pokemonObject.pokemon) ||\r\n    isEmpty(specieObject.specie)\r\n  ) {\r\n    return null;\r\n  }\r\n  console.log(specieObject)\r\n  return (\r\n    <PokemonDetails\r\n      pokemon={pokemonObject.pokemon as Pokemon}\r\n      specie={specieObject.specie as Specie}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  specieObject: state.specieObject,\r\n  pokemonObject: state.pokemonObject,\r\n});\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, {\r\n  fetchPokemonObject,\r\n  fetchPokemonSpecies,\r\n  fetchEvolutionChain,\r\n})(PokemonDetailsContainer);\r\n","import {\r\n  POKEMON_OBJECT_REQUEST,\r\n  POKEMON_OBJECT_SUCCESS,\r\n  POKEMON_OBJECT_FAILURE,\r\n} from \".\";\r\nimport { PokeAPI } from \"../config\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport function pokemonObjectRequest() {\r\n  return {\r\n    type: POKEMON_OBJECT_REQUEST,\r\n  };\r\n}\r\n\r\nexport function pokemonObjectSuccess(data: any) {\r\n  return {\r\n    type: POKEMON_OBJECT_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function pokemonObjectFailure(error: any) {\r\n  return {\r\n    type: POKEMON_OBJECT_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function fetchPokemonObject(name: string) {\r\n  return async function (dispatch: Dispatch) {\r\n    dispatch(pokemonObjectRequest());\r\n    \r\n    try {\r\n      const response = await PokeAPI.getPokemonByName(name);\r\n      dispatch(pokemonObjectSuccess(response));\r\n      return response;\r\n    } catch (error) {\r\n      dispatch(pokemonObjectFailure(error));\r\n    }\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport PokemonDetailsContainer from \"../containers/PokemonDetailsContainer\";\r\n\r\ninterface Props {}\r\nconst PokemonPage: React.FC<Props> = () => {\r\n  return <PokemonDetailsContainer />;\r\n};\r\n\r\nexport default PokemonPage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {}\r\n\r\nconst NavbarContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  background-color: #4ed9f9;\r\n  display: flex;\r\n  min-height: 3.25rem;\r\n  z-index: 10;\r\n  padding: 0 1.5rem;\r\n`;\r\n\r\nconst NavbarItem = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: white;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Navbar: React.FC<Props> = () => {\r\n  return (\r\n    <NavbarContainer>\r\n      <NavbarItem>\r\n        <Link to=\"/\">Pokédex</Link>\r\n      </NavbarItem>\r\n    </NavbarContainer>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport PokemonListPage from \"./pages/PokemonListPage\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport PokemonPage from \"./pages/PokemonPage\";\r\nimport styled from \"styled-components\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst Container = styled.div`\r\n  margin: 3.25rem auto;\r\n\r\n  @media screen and (min-width: 1088px) {\r\n    max-width: 960px;\r\n    width: 960px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: 1152px;\r\n    width: 1152px;\r\n  }\r\n\r\n  @media screen and (min-width: 1472px) {\r\n    max-width: 1344px;\r\n    width: 1344px;\r\n  }\r\n`;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n      <Navbar />\r\n      <Container>\r\n        <section>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <PokemonListPage />\r\n            </Route>\r\n            <Route exact path=\"/pokemon/:name\">\r\n              <PokemonPage />\r\n            </Route>\r\n          </Switch>\r\n        </section>\r\n      </Container>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  POKEMON_OBJECT_REQUEST,\r\n  POKEMON_OBJECT_SUCCESS,\r\n  POKEMON_OBJECT_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  pokemon: {},\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (\r\n  state = INITIAL_STATE,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case POKEMON_OBJECT_REQUEST:\r\n      return {\r\n        ...state,\r\n        pokemon: { ...state.pokemon },\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case POKEMON_OBJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemon: { ...action.payload },\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case POKEMON_OBJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        pokemon: null,\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  POKEMON_LIST_REQUEST,\r\n  POKEMON_LIST_SUCCESS,\r\n  POKEMON_LIST_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  pokemons: [],\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (\r\n  state = INITIAL_STATE,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case POKEMON_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        pokemons: [...state.pokemons],\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case POKEMON_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemons: [...state.pokemons, action.payload],\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case POKEMON_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        pokemons: [],\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  POKEMON_SPECIES_REQUEST,\r\n  POKEMON_SPECIES_SUCCESS,\r\n  POKEMON_SPECIES_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  specie: {\r\n    flavor_text_entries: [{}],\r\n    genera: [{}],\r\n    evolution_chain: { name: null, url: null },\r\n  },\r\n  error: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (\r\n  state = INITIAL_STATE,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case POKEMON_SPECIES_REQUEST:\r\n      return {\r\n        ...state,\r\n        specie: {\r\n          flavor_text_entries: [{}],\r\n          genera: [{}],\r\n          evolution_chain: { name: null, url: null },\r\n        },\r\n        error: null,\r\n        loading: true,\r\n      };\r\n    case POKEMON_SPECIES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        specie: { ...action.payload },\r\n        error: null,\r\n        loading: false,\r\n      };\r\n    case POKEMON_SPECIES_FAILURE:\r\n      return {\r\n        ...state,\r\n        specie: {\r\n          flavor_text_entries: [{}],\r\n          genera: [{}],\r\n        },\r\n        error: action.payload,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport pokemonObject from \"./pokemonObject\";\r\nimport pokemonList from \"./pokemonList\";\r\nimport specieObject from \"./specieObject\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemonList,\r\n  pokemonObject,\r\n  specieObject,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = (preloadedState: any) => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(thunk, createLogger()))\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst Theme = createGlobalStyle`\r\n    body {\r\n        font-family: Roboto,sans-serif;\r\n        letter-spacing: 1px;\r\n        box-sizing: inherit;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        margin: 0;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, p {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n\r\n    a {\r\n        color: unset;\r\n        text-decoration: unset;\r\n    }\r\n\r\n    section {\r\n        padding: 3rem 1.5rem;\r\n    }\r\n\r\n    .card-margin-top {\r\n        margin-top: 1rem;\r\n    }\r\n\r\n    .gray {\r\n        color: gray;\r\n    }\r\n\r\n    .title {\r\n        font-weight: 700\r\n    }\r\n\r\n    .flex {\r\n        flex: 1;\r\n    }\r\n`;\r\n\r\nexport default Theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Theme from \"./Theme\";\n\nconst store = configureStore({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Theme />\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}