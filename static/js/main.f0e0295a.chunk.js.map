{"version":3,"sources":["config/index.ts","actions/pokemon.ts","actions/index.ts","components/PokemonCard/index.tsx","components/Spinner.tsx","components/PokemonList/index.tsx","hooks/useScrollEventListener.ts","containers/PokemonListContainer.tsx","pages/PokemonListPage.tsx","components/Card/style.ts","components/Card/index.tsx","components/PokemonInformations.tsx","components/Range.ts","components/PokemonStats.tsx","components/PokemonDetails.tsx","containers/PokemonDetailsContainer.tsx","utils/isEmpty.ts","pages/PokemonPage.tsx","App.tsx","serviceWorker.ts","reducers/pokemon.ts","reducers/index.ts","store/index.ts","Theme.ts","index.tsx"],"names":["PokeAPI","require","Pokedex","protocol","hostName","versionPath","cache","timeout","pokemonListFailure","error","type","payload","PokemonImg","styled","div","InformationsBlock","TypesBlock","PokemonCardBlock","Link","PokemonCard","pokemon","to","name","style","float","id","className","textTransform","src","alt","height","toFixed","weight","types","map","rotate360","keyframes","Spinner","PaddedCol","Col","PokemonList","pokemonList","pokemons","length","loading","center","xs","sm","md","lg","key","useScrollEventListener","callback","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","addEventListener","removeEventListener","connect","state","fetchPokemonList","limit","offset","dispatch","a","interval","getPokemonsList","results","getPokemonByName","then","response","catch","useState","setOffset","prevOffset","PokemonListPage","CardContent","CardHeader","CardContainer","Card","title","children","PokemonInformations","abilities","ability","index","Range","progress","attrs","max","PokemonStats","stats","stat","toUpperCase","value","base_stat","PokemonDetails","fetchPokemonObject","obj","useParams","pokemonObject","Object","keys","constructor","console","log","PokemonPage","Container","App","exact","path","Boolean","location","hostname","match","INITIAL_STATE","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","preloadedState","createStore","applyMiddleware","thunk","createLogger","Theme","createGlobalStyle","store","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f0e0295a.chunk.js","sourcesContent":["// @ts-ignore\r\nconst Pokedex = require(\"pokeapi-js-wrapper\");\r\n\r\nconst options = {\r\n  protocol: \"https\",\r\n  hostName: \"pokeapi.co\",\r\n  versionPath: \"/api/v2/\",\r\n  cache: true,\r\n  timeout: 60 * 1000, // 60s\r\n};\r\n\r\nexport const PokeAPI = new Pokedex.Pokedex(options);\r\n","import {\r\n  POKEMON_LIST_REQUEST,\r\n  POKEMON_LIST_SUCCESS,\r\n  POKEMON_LIST_FAILURE,\r\n  POKEMON_OBJECT_REQUEST,\r\n  POKEMON_OBJECT_SUCCESS,\r\n  POKEMON_OBJECT_FAILURE,\r\n} from \".\";\r\nimport { PokeAPI } from \"../config\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport function pokemonListRequest() {\r\n  return {\r\n    type: POKEMON_LIST_REQUEST,\r\n  };\r\n}\r\n\r\nexport function pokemonListSuccess(data: any) {\r\n  return {\r\n    type: POKEMON_LIST_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function pokemonListFailure(error: any) {\r\n  return {\r\n    type: POKEMON_LIST_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function pokemonObjectRequest() {\r\n  return {\r\n    type: POKEMON_OBJECT_REQUEST,\r\n  };\r\n}\r\n\r\nexport function pokemonObjectSuccess(data: any) {\r\n  return {\r\n    type: POKEMON_OBJECT_SUCCESS,\r\n    payload: data,\r\n  };\r\n}\r\n\r\nexport function pokemonObjectFailure(error: any) {\r\n  return {\r\n    type: POKEMON_OBJECT_FAILURE,\r\n    payload: error,\r\n  };\r\n}\r\n\r\nexport function fetchPokemonObject(name: string) {\r\n  return async function (dispatch: Dispatch) {\r\n    dispatch(pokemonObjectRequest());\r\n\r\n    try {\r\n      const response = await PokeAPI.getPokemonByName(name);\r\n      dispatch(pokemonObjectSuccess(response));\r\n      return response;\r\n    } catch (error) {\r\n      dispatch(pokemonObjectFailure(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchPokemonList(limit: number, offset: number) {\r\n  return async function (dispatch: Dispatch) {\r\n    dispatch(pokemonListRequest());\r\n    const interval = {\r\n      limit: limit,\r\n      offset: offset,\r\n    };\r\n\r\n    try {\r\n      const response = await PokeAPI.getPokemonsList(interval);\r\n      response.results.map(async (pokemon: any) => {\r\n        return await PokeAPI.getPokemonByName(pokemon.name)\r\n          .then((response: any) => {\r\n            dispatch(pokemonListSuccess(response));\r\n          })\r\n          .catch((error: any) => dispatch(pokemonListFailure(error)));\r\n      });\r\n    } catch (error) {\r\n      dispatch(pokemonListFailure(error));\r\n    }\r\n  };\r\n}\r\n","export const POKEMON_LIST_REQUEST = \"POKEMON_LIST_REQUEST\";\r\nexport const POKEMON_LIST_SUCCESS = \"POKEMON_LIST_SUCCESS\";\r\nexport const POKEMON_LIST_FAILURE = \"POKEMON_LIST_FAILURE\";\r\n\r\nexport const POKEMON_OBJECT_REQUEST = \"POKEMON_OBJECT_REQUEST\";\r\nexport const POKEMON_OBJECT_SUCCESS = \"POKEMON_OBJECT_SUCCESS\";\r\nexport const POKEMON_OBJECT_FAILURE = \"POKEMON_OBJECT_FAILURE\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Pokemon } from \"../../types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst PokemonImg = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 300px;\r\n  width: 100%;\r\n  align-self: center;\r\n  img {\r\n    transition: width 0.25s;\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst InformationsBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst TypesBlock = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  img {\r\n    max-height: 28px;\r\n    max-width: 64px;\r\n  }\r\n`;\r\n\r\nconst PokemonCardBlock = styled(Link)`\r\n  color: unset;\r\n  text-decoration: unset;\r\n  display: flex;\r\n  position: relative;\r\n  height: 500px;\r\n  padding: 1.25rem;\r\n  flex-direction: column;\r\n  transition: box-shadow 0.3s;\r\n  height: 100%;\r\n    box-sizing: border-box;\r\n\r\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\r\n  :hover {\r\n    box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\r\n    background: rgb(248, 248, 255, 0.5);\r\n    ${PokemonImg} img {\r\n      width: 175px;\r\n      overflow: visible;\r\n    }\r\n  }\r\n  text-align: center;\r\n  justify-content: space-between;\r\n  p {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n  }\r\n`;\r\n\r\nconst PokemonCard: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <PokemonCardBlock to={`/pokemon/${pokemon.name}`}>\r\n      <div>\r\n        <p style={{ float: \"left\" }}>#{pokemon.id}</p>\r\n        <p\r\n          className=\"title\"\r\n          style={{ float: \"right\", textTransform: \"capitalize\" }}\r\n        >\r\n          {pokemon.name}\r\n        </p>\r\n      </div>\r\n      <PokemonImg>\r\n        <img src={`/images/pokemons/${pokemon.id}.svg`} alt={pokemon.name} />\r\n      </PokemonImg>\r\n\r\n      <InformationsBlock>\r\n        <p>Height: {(pokemon.height * 0.1).toFixed(1)} m</p>\r\n        <p>Weight: {(pokemon.weight * 0.1).toFixed(1)} kg</p>\r\n      </InformationsBlock>\r\n      <TypesBlock>\r\n        {pokemon.types.map((type) => (\r\n          <img\r\n            src={`/images/types/${type.type.name}.svg`}\r\n            alt={type.type.name}\r\n          />\r\n        ))}\r\n      </TypesBlock>\r\n    </PokemonCardBlock>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst rotate360 = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst Spinner = styled.div`\r\n  animation: ${rotate360} 1s linear infinite;\r\n  transform: translateZ(0);\r\n\r\n  border-top: 2px solid #5e7ef3;\r\n  border-right: 2px solid #5e7ef3;\r\n  border-bottom: 2px solid #5e7ef3;\r\n  border-left: 2px solid #082db3;\r\n  background: transparent;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { PokemonListState } from \"../../types\";\r\nimport PokemonCard from \"../PokemonCard\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport styled from \"styled-components\";\r\nimport Spinner from \"../Spinner\";\r\n\r\ninterface Props {\r\n  pokemonList?: PokemonListState;\r\n}\r\n\r\nconst PaddedCol = styled(Col)`\r\n  padding: 0.75rem;\r\n`;\r\n\r\nconst PokemonList: React.FC<Props> = ({ pokemonList }) => {\r\n  if (!pokemonList) return null;\r\n  if (pokemonList.pokemons.length === 0 && pokemonList.loading)\r\n    return <Spinner />;\r\n  if (pokemonList.error) return null;\r\n\r\n  return (\r\n    <Row center=\"xs\">\r\n      {pokemonList.pokemons.map((pokemon) => (\r\n        <PaddedCol xs={12} sm={4} md={4} lg={4}>\r\n          <PokemonCard pokemon={pokemon} key={pokemon.id} />\r\n        </PaddedCol>\r\n      ))}\r\n      {<Spinner />}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import { useEffect } from \"react\";\r\n\r\nfunction useScrollEventListener(callback: () => void) {\r\n  function handleScroll() {\r\n    if (\r\n      window.innerHeight + document.documentElement.scrollTop !==\r\n      document.documentElement.offsetHeight\r\n    )\r\n      return;\r\n\r\n    callback();\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, []);\r\n\r\n  return {};\r\n}\r\n\r\nexport default useScrollEventListener;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchPokemonList } from \"../actions/pokemon\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState } from \"../types\";\r\nimport PokemonList from \"../components/PokemonList\";\r\nimport useScrollEventListener from \"../hooks/useScrollEventListener\";\r\n\r\ninterface DispatchProps {\r\n  fetchPokemonList: (limit: number, offset: number) => void;\r\n}\r\n\r\ninterface StateProps {\r\n  pokemon: RootState[\"pokemon\"];\r\n}\r\n\r\ntype TotalProps = DispatchProps & StateProps;\r\n\r\nconst PokemonListContainer: React.FC<TotalProps> = ({\r\n  fetchPokemonList,\r\n  pokemon,\r\n}) => {\r\n  const [offset, setOffset] = useState(0);\r\n  useScrollEventListener(useOffsetToNextPage);\r\n\r\n  function useOffsetToNextPage() {\r\n    setOffset((prevOffset) => prevOffset + 21);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchPokemonList(21, offset > 649 ? 649 : offset);\r\n    //handle last\r\n  }, [fetchPokemonList, offset]);\r\n\r\n  return <PokemonList pokemonList={pokemon?.pokemonList} />;\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({ pokemon: state.pokemon });\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, {\r\n  fetchPokemonList,\r\n})(PokemonListContainer);\r\n","import React from \"react\";\r\nimport PokemonListContainer from \"../containers/PokemonListContainer\";\r\n\r\ninterface Props {}\r\nconst PokemonListPage: React.FC<Props> = () => {\r\n  return <PokemonListContainer />;\r\n};\r\n\r\nexport default PokemonListPage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 1.5rem;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  background-color: initial;\r\n  align-items: stretch;\r\n  box-shadow: 0 1px 2px rgba(10, 10, 10, 0.1);\r\n  display: flex;\r\n  padding: 0.75rem;\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  max-width: 100%;\r\n  position: relative;\r\n  box-shadow: 0 2px 3px rgba(10, 10, 10, 0.1), 0 0 0 1px rgba(10, 10, 10, 0.1);\r\n`;","import React from \"react\";\r\nimport { CardHeader, CardContent, CardContainer } from \"./style\";\r\n\r\ninterface Props {\r\n  title: string;\r\n}\r\n\r\nconst Card: React.FC<Props> = ({ title, children }) => {\r\n  return (\r\n    <CardContainer>\r\n      <CardHeader>\r\n        <p className=\"title\">{title}</p>\r\n      </CardHeader>\r\n      <CardContent>{children}</CardContent>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport { Col, Row } from \"react-flexbox-grid\";\r\nimport Card from \"./Card\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst PokemonInformations: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <Card title=\"Informations\">\r\n      <Row>\r\n        <Col xs>\r\n          <p className=\"gray\">Height</p>\r\n          <p>{pokemon.height}</p>\r\n          <p className=\"gray\">Weight</p>\r\n          <p>{pokemon.weight}</p>\r\n        </Col>\r\n        <Col xs>\r\n          <p className=\"gray\">Abilities</p>\r\n          {pokemon.abilities.map((ability, index) => (\r\n            <p key={index}>{ability.ability.name}</p>\r\n          ))}\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonInformations;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Range = styled.progress.attrs({\r\n  max: 100,\r\n})<{ value: number }>`\r\n  -webkit-appearance: none;\r\n  -moz-apperance: none;\r\n  height: 1rem;\r\n  padding: 0;\r\n  border: solid 1px #66c7f4;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  background: #fff;\r\n  width: 100%;\r\n\r\n\r\n  &::-webkit-progress-bar {\r\n    background: #E8E8E8;\r\n  }\r\n  &::-webkit-progress-value {\r\n    background: #66c7f4;\r\n  }\r\n  &::-moz-progress-bar {\r\n    background: #66c7f4;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport Card from \"./Card\";\r\nimport { Range } from \"./Range\";\r\n\r\ninterface Props {\r\n  pokemon: Pokemon;\r\n}\r\n\r\nconst PokemonStats: React.FC<Props> = ({ pokemon }) => {\r\n  return (\r\n    <Card title=\"Stats\">\r\n      {pokemon.stats.map((stat) => (\r\n        <>\r\n          <p className=\"gray\">{stat.stat.name.toUpperCase()}</p>\r\n          <Range value={stat.base_stat} />\r\n        </>\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonStats;\r\n","import React from \"react\";\r\nimport { Pokemon } from \"../types\";\r\nimport { Row, Col } from \"react-flexbox-grid\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport PokemonInformations from \"./PokemonInformations\";\r\nimport PokemonStats from \"./PokemonStats\";\r\n\r\ninterface Props {\r\n    pokemon: Pokemon;\r\n}\r\n\r\nconst PokemonDetails: React.FC<Props> = ({ pokemon }) => {\r\n    return <Row center=\"xs\">\r\n        <Col xs={12} sm={12} md={12} lg>\r\n          <PokemonCard pokemon={pokemon} />  \r\n        </Col>\r\n        <Col xs={12} sm={12} md={12} lg>\r\n          <PokemonInformations pokemon={pokemon} />  \r\n          <PokemonStats pokemon={pokemon} />  \r\n        </Col>\r\n    </Row>;\r\n}\r\n\r\nexport default PokemonDetails;","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { RootState, Pokemon } from \"../types\";\r\nimport { fetchPokemonObject } from \"../actions/pokemon\";\r\nimport PokemonCard from \"../components/PokemonCard\";\r\nimport isEmpty from \"../utils/isEmpty\";\r\nimport PokemonDetails from \"../components/PokemonDetails\";\r\n\r\ninterface DispatchProps {\r\n  fetchPokemonObject: (name: string) => void;\r\n}\r\n\r\ninterface StateProps {\r\n  pokemon: RootState[\"pokemon\"];\r\n}\r\n\r\ntype TotalProps = DispatchProps & StateProps;\r\n\r\nconst PokemonDetailsContainer: React.FC<TotalProps> = ({\r\n  fetchPokemonObject,\r\n  pokemon,\r\n}) => {\r\n  const { name } = useParams<{ name: string }>();\r\n\r\n  useEffect(() => {\r\n    fetchPokemonObject(name);\r\n  }, [name]);\r\n\r\n  if (!pokemon || isEmpty(pokemon.pokemonObject.pokemon)) {\r\n    return null;\r\n  }\r\n\r\n  console.log(pokemon?.pokemonObject);\r\n  return (\r\n    <PokemonDetails pokemon={pokemon.pokemonObject.pokemon as Pokemon} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: RootState) => ({ pokemon: state.pokemon });\r\n\r\nexport default connect<StateProps, DispatchProps>(mapStateToProps, {\r\n  fetchPokemonObject,\r\n})(PokemonDetailsContainer);\r\n","export default (obj: any) => Object.keys(obj).length === 0 && obj.constructor === Object","import React from \"react\";\r\nimport PokemonDetailsContainer from \"../containers/PokemonDetailsContainer\";\r\n\r\ninterface Props {}\r\nconst PokemonPage: React.FC<Props> = () => {\r\n  return <PokemonDetailsContainer />;\r\n};\r\n\r\nexport default PokemonPage;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PokemonListPage from \"./pages/PokemonListPage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport PokemonPage from \"./pages/PokemonPage\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  margin: 0 auto;\n\n  @media screen and (min-width: 1088px) {\n    max-width: 960px;\n    width: 960px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    max-width: 1152px;\n    width: 1152px;\n  }\n\n  @media screen and (min-width: 1472px) {\n    max-width: 1344px;\n    width: 1344px;\n  }\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/\">\n          <PokemonListPage />\n        </Route>\n        <Route exact path=\"/pokemon/:name\">\n          <PokemonPage />\n        </Route>\n      </Switch>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  POKEMON_LIST_REQUEST,\r\n  POKEMON_LIST_SUCCESS,\r\n  POKEMON_LIST_FAILURE,\r\n  POKEMON_OBJECT_REQUEST,\r\n  POKEMON_OBJECT_SUCCESS,\r\n  POKEMON_OBJECT_FAILURE,\r\n} from \"../actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  pokemonList: {\r\n    pokemons: [],\r\n    error: null,\r\n    loading: false,\r\n  },\r\n  pokemonObject: {\r\n    pokemon: {},\r\n    error: null,\r\n    loading: false,\r\n  },\r\n};\r\n\r\nexport default function (\r\n  state = INITIAL_STATE,\r\n  action: { type: string; payload: any }\r\n) {\r\n  switch (action.type) {\r\n    case POKEMON_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        pokemonList: {\r\n          pokemons: [...state.pokemonList.pokemons],\r\n          error: null,\r\n          loading: true,\r\n        },\r\n      };\r\n    case POKEMON_LIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemonList: {\r\n          pokemons: [...state.pokemonList.pokemons, action.payload],\r\n          error: null,\r\n          loading: false,\r\n        },\r\n      };\r\n    case POKEMON_LIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        pokemonList: {\r\n          pokemons: [],\r\n          error: action.payload,\r\n          loading: false,\r\n        },\r\n      };\r\n    case POKEMON_OBJECT_REQUEST:\r\n      return {\r\n        ...state,\r\n        pokemonObject: {\r\n          pokemon: { ...state.pokemonObject.pokemon },\r\n          error: null,\r\n          loading: true,\r\n        },\r\n      };\r\n    case POKEMON_OBJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemonObject: {\r\n          pokemon: { ...action.payload },\r\n          error: null,\r\n          loading: false,\r\n        },\r\n      };\r\n    case POKEMON_OBJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        pokemonObject: {\r\n          pokemon: null,\r\n          error: action.payload,\r\n          loading: false,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport pokemon from \"./pokemon\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemon,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = (preloadedState: any) => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    preloadedState,\r\n    composeEnhancers(applyMiddleware(thunk, createLogger()))\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst Theme = createGlobalStyle`\r\n    body {\r\n        font-family: Roboto,sans-serif;\r\n        letter-spacing: 1px;\r\n        box-sizing: inherit;\r\n        font-size: 1rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n    }\r\n\r\n    .gray {\r\n        color: gray;\r\n    }\r\n\r\n    .title {\r\n        font-weight: 700\r\n    }\r\n\r\n    h1, h2, h3, h4, h5, p {\r\n        margin: 0;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport default Theme;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Theme from \"./Theme\";\nconst store = configureStore({});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <Theme />\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}